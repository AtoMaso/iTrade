import {Component, NgZone} from 'angular2/core';
import {UPLOAD_DIRECTIVES} from 'ng2-uploader/ng2-uploader';

@Component({
    selector: 'file-upload',
    templateUrl: './app/views/file-upload/ng2-upload.component.html',    
    providers: [],
    directives: [UPLOAD_DIRECTIVES],
    pipes: []
})
export class NG2UploadComponent {
    private zone: NgZone;
    private options: Object = {
        url: 'http://localhost:5500/api/uploads'
    };
    private basicProgress: number = 0;
    private basicResp: Object;
    private multipleProgress: number = 0;
    private multipleResp: any[] = [];
    private dropProgress: number = 0;
    private dropResp: any[] = [];

    constructor() {
        this.zone = new NgZone({ enableLongStackTrace: false });
    }

    handleBasicUpload(data): void {
      this.basicProgress = 0;
      this.basicResp = null;
      this.basicResp = data;
      this.zone.run(() => {
          this.basicProgress = data.progress.percent;
      });
    }

    handleMultipleUpload(data): void {
      this.multipleProgress = 0;
      let index = this.multipleResp.findIndex(x => x.id === data.id);
      if (index === -1) {
          this.multipleResp.push(data);
      }
      else {
          this.zone.run(() => {
              this.multipleResp[index] = data;
          });
      }

      let total = 0, uploaded = 0;
      this.multipleResp.forEach(resp => {
          total += resp.progress.total;
          uploaded += resp.progress.loaded;
      });

      this.multipleProgress = Math.floor(uploaded / (total / 100));
    }

    handleDropUpload(data): void {
      this.dropProgress = 0;
      let index = this.dropResp.findIndex(x => x.id === data.id);
      if (index === -1) {
          this.dropResp.push(data);
      }
      else {
          this.zone.run(() => {
              this.dropResp[index] = data;
          });
      }

      let total = 0, uploaded = 0;
      this.dropResp.forEach(resp => {
          total += resp.progress.total;
          uploaded += resp.progress.loaded;
      });

      this.dropProgress = Math.floor(uploaded / (total / 100));
    }

}



